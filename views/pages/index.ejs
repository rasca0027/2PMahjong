<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- CSS framework -->
    <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.css">
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/milligram/1.3.0/milligram.css">

    <title>2P Mahjong!</title>
  </head>
  <body>

    <div class="container" id="app">
      <h1>Hello, world!</h1>

      <p>{{ message }} </p>

      <div v-if="state === 0">
        <button type="button" class="button" v-on:click="newGame">
          New Game 
        </button>

        <div class="form-group">
          <label for="room-num">Room ID</label>
          <input type="text" class="form-control" id="room-num" aria-describedby="roomHelp" v-model="roomId">
        </div>
        <button type="button" class="button" v-on:click="joinGame">
          Join Game 
        </button>
      </div> <!-- join game -->

      <div v-if="state === 1">
        Waiting for another player to join...
      </div>
    </div>

    <!-- development version, includes helpful console warnings -->
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script> 
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
      var socket = io()
      var vue = new Vue({
        el: '#app',
        data: {
          message: 'Hello Vue!',
          state: 0,
          info: []
        },
        created: function() {
          socket.on('connect', () => {
            console.log("socket connect")
            this.message = "connect" + socket.id
          })
          socket.on('gameStart', (data) => {
            alert('game start')
          })
          socket.on('joined', (data) => {
            this.info.push({
              username: data,
                type: 'joined'
            });
            setTimeout(() => {
              this.info = [];
            }, 5000);
          });
        },
        methods: {
          newGame: function() {
            // post to newgame endpoint 
            axios.post('/newgame', {
              userId: socket.id
            })
              .then((result) => {
                // if success, change state to 1
                console.log(result) 
                if (result.status === 'success') {
                  this.message = 'successfully created room ' + result.room
                  this.state = 1
                }
              })
             .catch(function (error) {
                console.log(error);
              })
          },
          joinGame: function() {
            let roomId = 
            axios.post('/join', {
              userId: socket.id,
              room: roomId
            })
              .then((result) => {
                if (result.status === 'no_such_room') {
                  this.message = 'No suck room ID'
                } else {
                  this.message = 'Game start'
                  this.state = 2
                }
              })
          }
        }
      })


      /*  socket.on('broad', function(data) {
              $('#future').append(data+ "<br/>");
        });
        */
    </script>
  </body>
</html>
